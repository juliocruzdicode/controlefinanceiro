services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: controle_financeiro_db
    environment:
      POSTGRES_DB: controle_financeiro
      POSTGRES_USER: controle_financeiro
      POSTGRES_PASSWORD: senha_segura_aqui
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - controle_financeiro_network
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U controle_financeiro -d controle_financeiro"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicação Flask
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: controle_financeiro_app
    environment:
      # Configurações gerais
      SECRET_KEY: sua-chave-secreta-muito-segura-aqui-mude-em-producao
      DEBUG: "true"
      
      # Configurações do banco
      DATABASE_TYPE: postgresql
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: controle_financeiro
      POSTGRES_USER: controle_financeiro
      POSTGRES_PASSWORD: senha_segura_aqui
      
      # Configurações de email (ajuste conforme necessário)
      MAIL_SERVER: smtp.skymail.net.br
      MAIL_PORT: 465
      MAIL_USE_TLS: false
      MAIL_USE_SSL: true
      MAIL_USERNAME: testedesistema@bioneo.com.br
      MAIL_PASSWORD: 890@Mudar
      MAIL_DEFAULT_SENDER: testedesistema@bioneo.com.br
      
      # Configurações de interface
      ITEMS_PER_PAGE: 10
      TRANSACOES_PER_PAGE_DEFAULT: 20
      TRANSACOES_PER_PAGE_MAX: 100

      # Configurações de produção
      SESSION_COOKIE_SECURE: "true"

      # Configurações do Google OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: https://prosperai.site/callback
      GOOGLE_DISCOVERY_URL: https://accounts.google.com/.well-known/openid-configuration

    # Temporariamente mapeando a porta para diagnóstico
    ports:
      - "127.0.0.1:5005:5005"
    expose:
      - "5005"
    volumes:
      - app_data:/app/instance
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - controle_financeiro_network
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep 'python' > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=app-network"
      - "traefik.http.routers.financeiro.rule=Host(`prosperai.site`)"
      - "traefik.http.routers.financeiro.entrypoints=websecure"
      - "traefik.http.routers.financeiro.tls.certresolver=myresolver"
      - "traefik.http.services.financeiro.loadbalancer.server.port=5005"
      # Rota HTTP simples para testes
      - "traefik.http.routers.financeiro-http.rule=Host(`prosperai.site`)"
      - "traefik.http.routers.financeiro-http.entrypoints=web"
      - "traefik.http.routers.financeiro-http.service=financeiro"
      # Adicione um middleware para verificar os caminhos
      - "traefik.http.middlewares.strip-prefix.stripprefix.prefixes=/"
      - "traefik.http.routers.financeiro.middlewares=strip-prefix@docker"

  # Nginx (opcional - para produção)
  # Removido o nginx pois o Traefik fará o papel de proxy reverso e SSL
  # nginx:
  #   image: nginx:alpine
  #   container_name: controle_financeiro_nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - web
  #   networks:
  #     - controle_financeiro_network
  #   restart: unless-stopped
  #   profiles:
  #     - production

volumes:
  postgres_data:
    driver: local
  app_data:
    driver: local

networks:
  controle_financeiro_network:
    driver: bridge
  app-network:
    external: true
