#!/usr/bin/env python3
"""
Script para adicionar uma transa√ß√£o de teste e verificar se os bot√µes aparecem
"""

import sys
import os

# Adicionar o diret√≥rio do projeto ao path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app, db
from models import Transacao, Categoria, TipoTransacao
from datetime import date, datetime

def criar_transacao_teste():
    """Cria uma transa√ß√£o de teste simples"""
    with app.app_context():
        try:
            # Verificar se j√° existe alguma categoria
            categoria = Categoria.query.first()
            if not categoria:
                # Criar uma categoria de teste
                categoria = Categoria(nome="Alimenta√ß√£o", tipo=TipoTransacao.DESPESA)
                db.session.add(categoria)
                db.session.commit()
                print("‚úÖ Categoria de teste criada")
            
            # Criar uma transa√ß√£o de teste (n√£o recorrente)
            transacao = Transacao(
                descricao="Teste - Almo√ßo",
                valor=25.50,
                data=date.today(),
                tipo=TipoTransacao.DESPESA,
                categoria_id=categoria.id,
                recorrencia_id=None  # N√£o recorrente
            )
            
            db.session.add(transacao)
            db.session.commit()
            
            print(f"‚úÖ Transa√ß√£o de teste criada: ID {transacao.id}")
            print(f"   Descri√ß√£o: {transacao.descricao}")
            print(f"   Valor: R$ {transacao.valor}")
            print(f"   √â recorrente: {transacao.is_recorrente}")
            
            return transacao.id
            
        except Exception as e:
            print(f"‚ùå Erro ao criar transa√ß√£o de teste: {e}")
            db.session.rollback()
            return None

def listar_transacoes():
    """Lista todas as transa√ß√µes no banco"""
    with app.app_context():
        try:
            transacoes = Transacao.query.all()
            print(f"\nüìä Total de transa√ß√µes no banco: {len(transacoes)}")
            
            for t in transacoes:
                print(f"   ID {t.id}: {t.descricao} - R$ {t.valor} - Recorrente: {t.is_recorrente}")
                
        except Exception as e:
            print(f"‚ùå Erro ao listar transa√ß√µes: {e}")

if __name__ == "__main__":
    print("üß™ Criando transa√ß√£o de teste...")
    print("=" * 40)
    
    # Listar transa√ß√µes existentes
    listar_transacoes()
    
    # Criar uma transa√ß√£o de teste
    transacao_id = criar_transacao_teste()
    
    if transacao_id:
        print(f"\nüéØ Agora voc√™ pode testar os bot√µes com a transa√ß√£o ID {transacao_id}")
        print("   Acesse: http://127.0.0.1:5001/transacoes")
    
    # Listar transa√ß√µes ap√≥s cria√ß√£o
    print("\n" + "=" * 40)
    listar_transacoes()
